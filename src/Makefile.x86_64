INC=-I. -I.. -I../include
CC=gcc
DEBUGOPT=-Wall -g -pg 
BINDIR=../bin

LANCZOS=blanczos64-no-mmx
ALLOPT=-march=$(ARCH) -mtune=$(ARCH) -D__ppc__
# -D__ppc__ should be removed later
# TODO: carefully inspect all ``#if defined(__ppc__)'' and
# add ``#if defined(__x86_64__)'' where required

OPT2=-O2 -funroll-loops -fomit-frame-pointer -Wall $(ALLOPT)
OPT3=-O3 -fomit-frame-pointer -Wall $(ALLOPT)
OPT=-Wall -O $(ALLOPT)

#OPT=$(DEBUGOPT) $(ALLOPT) 
#OPT2=$(DEBUGOPT) $(ALLOPT)
#OPT3=$(DEBUGOPT) $(ALLOPT) 

LIBS=-lgmp -lm 

OBJS=getprimes.o modinv32.o \
     fbmisc.o squfof.o rels.o \
     $(LANCZOS).o poly.o mpz_poly.o \
     mpz_mat.o smintfact.o misc.o ecm4c.o nfmisc.o \
     montgomery_sqrt.o matstuff.o dickman.o makefb.o fbgen.o\
     llist.o combparts.o if.o
BINS=$(BINDIR)/sieve $(BINDIR)/procrels $(BINDIR)/sqrt $(BINDIR)/polyselect $(BINDIR)/makefb $(BINDIR)/matsolve $(BINDIR)/matbuild
LSBINS=latsiever polsel
TESTBIN=./tsrc
TESTCODE=./tsrc

all : $(OBJS) $(BINS) $(LSBINS) ;
tests: $(TESTS) ;
bins: $(BINS) ;


.c.o : 
	$(CC) $(INC) $(OPT3) -c $*.c

smintfact.o : smintfact.c ;
	gcc $(INC) $(OPT3) -c smintfact.c

fbmisc.o : fbmisc.c ;
	gcc $(INC) $(OPT3) -c fbmisc.c

rels.o : rels.c ;
	gcc $(INC) $(OPT3) -c rels.c

latsieve.o : latsieve.c ;
	gcc $(INC) $(OPT3) -c latsieve.c 
	
$(BINDIR)/sieve : sieve.c clsieve.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ sieve.c clsieve.c $(OBJS) $(LIBS)

$(BINDIR)/makefb : makefb.c $(OBJS) ;
	gcc $(INC) $(OPT2) -D_MAKEFB_STANDALONE -o $@ makefb.c getprimes.o \
             fbmisc.o poly.o mpz_poly.o smintfact.o modinv32.c if.o \
             misc.o nfmisc.o mpz_mat.o ecm4c.o fbgen.o rels.o $(LIBS)

$(BINDIR)/procrels : procrels.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ procrels.c $(OBJS) $(LIBS)

$(BINDIR)/matsolve : matsolve.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ matsolve.c $(OBJS) $(LIBS)

$(BINDIR)/matbuild : matbuild.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ matbuild.c $(OBJS) $(LIBS)

$(BINDIR)/sqrt : sqrt.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ sqrt.c $(OBJS) $(LIBS)

$(BINDIR)/polyselect : polyselect.c $(OBJS) ;
	gcc $(INC) $(OPT3) -o $@ polyselect.c $(OBJS) $(LIBS)

latsiever : ;
	cd lasieve4; $(MAKE) -f Makefile.x86_64

polsel : ;
	CFLAGS="$(OPT3) -I. $(LOCALINC)" LIBFLAGS="$(LIBFLAGS)" $(MAKE) -C pol5

clean : lasieve-clean polsel-clean ;
	rm -f *.o core $(BINS)

lasieve-clean: ;
	$(MAKE) -C lasieve4 -f Makefile.x86_64 clean

polsel-clean : ;
	$(MAKE) -C pol5 clean

squeaky : clean ;
	

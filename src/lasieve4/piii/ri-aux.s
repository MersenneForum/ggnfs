/* ri-aux.s
   Written by T. Kleinjung
   6/13/04: Hacked up for use in GGNFS by Chris Monico.
                                                                                                       
   Copyright (C) 2002 Jens Franke, T.Kleinjung
   This file is part of gnfs4linux, distributed under the terms of the
   GNU General Public Licence and WITHOUT ANY WARRANTY.
                                                                                                       
   You should have received a copy of the GNU General Public License along
   with this program; see the file COPYING.  If not, write to the Free
   Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
   2111-1307, USA.
*/

	# The function we want to write.
	# ulong asm_getbc(x)
	# Modular inverse of x modulo modulo32
	# and y satisfies 0<y<x.

	# Number of trial subtractions before doing a division

	# %eax and %edx are used in the division.



	.text
	.align	4
	.globl asm_getbc
asm_getbc:
	pushl %ebx
	pushl %esi
	pushl %edi
	pushl %ebp
	# Get args from stack. Test their sanity.
	# Set xc and yc to their initial values.
	movl 20(%esp),%edi
	xorl %ecx,%ecx
	movl 28(%esp),%ebp
	xorl %ebx,%ebx
	movl 24(%esp),%esi
	incl %ecx
	cmpl %edi,%ebp
	ja   have_bs
divide:
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %edi,%esi
	jb test_y
	movl %esi,%eax
	xorl %edx,%edx
	divl %edi
	movl %edx,%esi
	mull %ecx
	addl %eax,%ebx
test_y:
	cmpl %esi,%ebp
	ja have_ct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %esi,%edi
	jb test_x
	movl %edi,%eax
	xorl %edx,%edx
	divl %esi
	movl %edx,%edi
	mull %ebx
	addl %eax,%ecx
test_x:
	cmpl %edi,%ebp
	jbe divide
have_bs:
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	subl %edi,%esi
	addl %ecx,%ebx
	cmpl %esi,%ebp
	ja have_bsct
	movl %esi,%eax
	xorl %edx,%edx
	subl %ebp,%eax
	divl %edi
	incl %eax
	movl %eax,%ebp
	mull %edi
	subl %eax,%esi
	movl %ebp,%eax
	mull %ecx
	addl %eax,%ebx
	jmp have_bsct
have_ct:
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	subl %esi,%edi
	addl %ebx,%ecx
	cmpl %edi,%ebp
	ja have_bsct
	movl %edi,%eax
	xorl %edx,%edx
	subl %ebp,%eax
	divl %esi
	incl %eax
	movl %eax,%ebp
	mull %esi
	subl %eax,%edi
	movl %ebp,%eax
	mull %ebx
	addl %eax,%ecx
have_bsct:
	movl 32(%esp),%eax
	movl 36(%esp),%edx
	movl 40(%esp),%ebp
	movl %edi,(%eax)
	movl 44(%esp),%eax
	movl %ecx,(%edx)
	movl %esi,(%ebp)
	movl %ebx,(%eax)
	popl %ebp
	popl %edi
	popl %esi
	popl %ebx
	ret
